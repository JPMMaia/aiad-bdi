<?xml version="1.0" encoding="UTF-8"?>
<!--
	<H3>The exit_door collector application descriptor</H3>

	It can be started to launch a exit_door collector scenario.
	This example is inspired by the "robot" example
	of the Jason BDI agent engine.
-->
<applicationtype xmlns="http://jadex.sourceforge.net/jadex"
	xmlns:env="http://jadex.sourceforge.net/jadex-envspace"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex 
	                    http://jadex.sourceforge.net/jadex-application-2.2.xsd
	                    http://jadex.sourceforge.net/jadex-envspace 
	                    http://jadex.sourceforge.net/jadex-envspace-2.2.xsd"
	name="Evacuation" package="evacuation">
	
	<imports>
		<import>jadex.bridge.IComponentIdentifier</import>
		<import>jadex.extension.envsupport.environment.*</import>
		<import>jadex.extension.envsupport.environment.space2d.*</import>
		<import>jadex.extension.envsupport.environment.RoundBasedExecutor</import>
		<import>jadex.extension.envsupport.math.*</import>
		<import>jadex.bridge.service.clock.IClockService</import>
		<import>jadex.extension.envsupport.dataview.*</import>
		<import>jadex.extension.envsupport.observer.perspective.*</import>
		<import>jadex.bdi.planlib.*</import>
        <import>jadex.extension.envsupport.environment.DeltaTimeExecutor</import>
		<import>jadex.extension.envsupport.evaluation.*</import>
		<import>jadex.extension.envsupport.observer.gui.plugin.*</import>
	</imports>
	
	<!-- Space types of this application. Spaces are shared by agents of the same application. -->
	<extensiontypes>
		<!-- Declaration of a grid environment as space type. -->
		<env:envspacetype name="2dspace" class="Grid2D" width="20" height="20" >
		
			<!-- Object types -->
			<env:objecttypes>

                <!-- Incident -->
				<env:objecttype name="incident">
					<env:property name="position" class="IVector2"/>
					<env:property name="type" class="String"/>
				</env:objecttype>

                <!-- Terrain -->
				<env:objecttype name="terrain">
					<env:property name="position" class="IVector2" />
                    <env:property name="type" class="String"/>
				</env:objecttype>

                <!-- Wanderer -->
                <env:objecttype name="wanderer">
                    <env:property name="position" class="IVector2"/>
                    <env:property name="speed" class="Double"/>
					<env:property name="space" class="Space2D"/>
                </env:objecttype>

				<!-- Wanderer -->
				<env:objecttype name="dead_agent">
					<env:property name="position" class="IVector2"/>
					<env:property name="speed" class="Double"/>
					<env:property name="space" class="Space2D"/>
				</env:objecttype>

				<!-- Wanderer -->
				<env:objecttype name="hurt_agent">
					<env:property name="position" class="IVector2"/>
					<env:property name="speed" class="Double"/>
					<env:property name="space" class="Space2D"/>
				</env:objecttype>

				<env:objecttype name="same_cell">
					<env:property name="position" class="IVector2"/>
					<env:property name="space" class="Space2D"/>
				</env:objecttype>

				<!-- Wanderer -->
				<env:objecttype name="cure_agent">
					<env:property name="position" class="IVector2"/>
					<env:property name="speed" class="Double"/>
					<env:property name="space" class="Space2D"/>
				</env:objecttype>

				<env:objecttype name="push_agent">
					<env:property name="position" class="IVector2"/>
					<env:property name="speed" class="Double"/>
					<env:property name="space" class="Space2D"/>
				</env:objecttype>

				<!-- Herding -->
				<env:objecttype name="herding">
					<env:property name="position" class="IVector2"/>
					<env:property name="speed" class="Double"/>
					<env:property name="space" class="Space2D"/>
				</env:objecttype>

				<!-- Conservative -->
				<env:objecttype name="conservative">
					<env:property name="position" class="IVector2"/>
					<env:property name="speed" class="Double"/>
					<env:property name="space" class="Space2D"/>
				</env:objecttype>

                <!-- Exit door -->
                <env:objecttype name="exit_door">
                    <env:property name="position" event="true"/>
                </env:objecttype>

            </env:objecttypes>
			
			<!-- Process types -->
			<env:processtypes>
				<!-- Create World process -->
				<env:processtype name="create_world" class="processes.WorldGenerator"/>

				<!-- Create Incident  -->
				<env:processtype name="create_incident" class="processes.IncidentProcess"/>


			</env:processtypes>

            <!-- Declaration of the relationships between agents and their avatar objects in the space. -->
            <env:avatarmappings>

                <!-- Map Wanderer component to wanderer object type -->
                <env:avatarmapping componenttype="Wanderer" objecttype="wanderer" createavatar="false" createcomponent="true"/>

				<!-- Map herding component to herding object type -->
				<env:avatarmapping componenttype="Herding" objecttype="herding" createavatar="false" createcomponent="true"/>

				<!-- Map Conservative component to conservative object type -->
				<env:avatarmapping componenttype="Conservative" objecttype="conservative" createavatar="false" createcomponent="true"/>


			</env:avatarmappings>
			
			<!-- Data views for defining cut outs of the world objects. -->
			<env:dataviews>

                <env:dataview name="view_all" class="GeneralDataView2D" />

            </env:dataviews>
		
			<!-- The percepttypes, generators and processors. -->
			<env:percepttypes>
				
				<!-- Percepttypes that the environment produces and agents can consume. -->
				<env:percepttype name="exit_door_appeared" objecttype="exit_door"/>
				<env:percepttype name="exit_door_disappeared" objecttype="exit_door" />
					
				<!-- Percept generators define which percepts should be created -->
				<env:perceptgenerator name="visiongen" class="DefaultVisionGenerator">
					<env:property name="maxrange">0</env:property>
					<env:property name="range_property">"vision_range"</env:property>
					<!-- percept types are declared with associated action types:
						percepttype, actiontype1, actiontype2, ... -->
					<env:property name="percepttypes">
						new Object[]
						{
							new String[]{"exit_door_appeared", "appeared", "created"}, 
							new String[]{"exit_door_disappeared", "disappeared", "destroyed"}
						}
					</env:property>
				</env:perceptgenerator>
				
				<!-- Percept processors consume percepts and pushSet them into the agents. -->
				<env:perceptprocessor componenttype="Collector" class="DefaultBDIVisionProcessor" >
					<env:property name="percepttypes">
						new Object[]
						{
							new String[]{"exit_door_appeared", "add", "exit_doors"}, 
							new String[]{"exit_door_disappeared", "remove", "exit_doors"}
						}
					</env:property>
				</env:perceptprocessor>

			</env:percepttypes>
			
			<!-- Actions that can be performed in the environment. -->
			<env:actiontypes>

                <env:actiontype name="go" class="actions.GoAction" >
					<env:property name="object_id" class="Object"/>
					<env:property name="direction" class="String"/>
				</env:actiontype>

            </env:actiontypes>
			
			<!-- Perspectives define the user-interface appearance. -->
			<env:perspectives>
				<env:perspective name="icons" class="Perspective2D" objectplacement="center">

                    <!-- Collector avatar -->
           <!--         <env:drawable objecttype="collector" width="1.0" height="1.0" rotation="rotation">
						<env:property name="vision_size" dynamic="true">new Vector2Double($object.vision_range*2+1)</env:property>
						<env:texturedrectangle layer="0" x="0" y="-0.1" width="0.8" height="0.8" imagepath="evacuation/images/collector.png" />
						<env:texturedrectangle layer="3" width="0.5" height="0.5" x="0.3" y="-0.3" imagepath="evacuation/images/garbage.png">
							<env:drawcondition>$object.exit_door!=null</env:drawcondition> 
						</env:texturedrectangle>
						<env:rectangle layer="-1" size="vision_size" color="#ffff007f" />
					</env:drawable> -->

                    <!-- Exit door avatar -->
                <!--    <env:drawable objecttype="exit_door" width="0.7" height="0.7">
						<env:texturedrectangle layer="0" imagepath="evacuation/images/garbage.png" />
					</env:drawable> -->

                    <!-- Terrain avatar -->
                    <env:drawable objecttype="terrain" height="1.0" width="1.0">

                        <!-- Grass avatar -->
                        <env:texturedrectangle layer="1" imagepath="images/terrain_2.png">
                            <env:drawcondition>$object.type.equals(0)</env:drawcondition>
                        </env:texturedrectangle>

                        <!-- Bush avatar -->
                        <env:texturedrectangle layer="1" imagepath="images/terrain_3.png">
                            <env:drawcondition>$object.type.equals(1)</env:drawcondition>
                        </env:texturedrectangle>

                        <!-- Flower avatar -->
                        <env:texturedrectangle layer="1" imagepath="images/terrain_4.png">
                            <env:drawcondition>$object.type.equals(2)</env:drawcondition>
                        </env:texturedrectangle>

                    </env:drawable>

					<!-- Wanderer avatar -->
					<env:drawable objecttype="dead_agent" height="1.0" width="1.0">
						<env:texturedrectangle layer="6" imagepath="images/dead_agent.png"/>
					</env:drawable>

					<!-- Wanderer avatar -->
					<env:drawable objecttype="hurt_agent" height="1.0" width="1.0">
						<env:texturedrectangle layer="6" imagepath="images/hurt_agent.png"/>
					</env:drawable>

					<env:drawable objecttype="same_cell" height="1.0" width="1.0">
						<env:texturedrectangle layer="5" imagepath="images/same_cell.png"/>
					</env:drawable>

					<!-- Wanderer avatar -->
					<env:drawable objecttype="cure_agent" height="1.0" width="1.0">
						<env:texturedrectangle layer="6" imagepath="images/cure_agent.png"/>
					</env:drawable>

					<!-- Wanderer avatar -->
					<env:drawable objecttype="push_agent" height="1.0" width="1.0">
						<env:texturedrectangle layer="6" imagepath="images/push_agent.png"/>
					</env:drawable>

                    <!-- Wanderer avatar -->
                    <env:drawable objecttype="wanderer" height="1.0" width="1.0">
                        <env:texturedrectangle layer="2" imagepath="images/wanderer.png"/>
                    </env:drawable>

					<!-- Herding avatar -->
					<env:drawable objecttype="herding" height="1.0" width="1.0">
						<env:texturedrectangle layer="2" imagepath="images/wanderer2.png"/>
					</env:drawable>

					<!-- Conservative avatar -->
					<env:drawable objecttype="conservative" height="1.0" width="1.0">
						<env:texturedrectangle layer="2" imagepath="images/wanderer3.png"/>
					</env:drawable>

					<!-- Door avatar -->
					<env:drawable objecttype="exit_door" height="1.0" width="1.0">
						<env:texturedrectangle layer="1" imagepath="images/terrain_4.png"/>
					</env:drawable>

                    <!-- Incident avatar -->
                    <env:drawable objecttype="incident" height="1.0" width="1.0">

                        <!-- Flames -->
                        <env:texturedrectangle layer="6" imagepath="images/flames.png">
                            <env:drawcondition>$object.type.equals(0)</env:drawcondition>
                        </env:texturedrectangle>

                        <!-- Water -->
                        <env:texturedrectangle layer="1" imagepath="images/water.png">
                            <env:drawcondition>$object.type.equals(1)</env:drawcondition>
                        </env:texturedrectangle>

						<!-- Terrorism -->
						<env:texturedrectangle layer="2" imagepath="images/terrorist.png">
							<env:drawcondition>$object.type.equals(2)</env:drawcondition>
						</env:texturedrectangle>

                    </env:drawable>

                    <!-- Background image -->
                    <env:prelayers>
                        <env:tiledlayer width="0.25" height="0.25" imagepath="images/terrain_1.png" />
                    </env:prelayers>

                    <!-- -->
                    <env:postlayers>
                        <env:gridlayer width="1.0" height="1.0" color="black" />
                    </env:postlayers>

				</env:perspective>
			</env:perspectives>

            <env:spaceexecutor class="DeltaTimeExecutor">
                <env:property name="space">$space</env:property>
                <env:property name="tick">true</env:property>
            </env:spaceexecutor>

		</env:envspacetype>
	</extensiontypes>
	
	<!-- Agent types of the application. -->
	<componenttypes>

        <!-- Wanderer agent type -->
        <componenttype name="Wanderer" filename="evacuation\agents\WandererBDI.class"/>
		<componenttype name="Herding" filename="evacuation\agents\HerdingBDI.class"/>
		<componenttype name="Conservative" filename="evacuation\agents\ConservativeBDI.class"/>

	</componenttypes>
	
	<!-- Application instance definitions. -->
	<configurations>
		<configuration name="Default">

            <!-- Extensions -->
			<extensions>
				<env:envspace name="2dspace" type="2dspace">

                    <!-- Processes -->
					<env:processes>

                        <!-- Create World process -->
                        <env:process type="create_world"/>

						<!-- Create Incident process -->
						<env:process type="create_incident"/>

					</env:processes>

                    <!-- Observers -->
					<env:observers>

                        <!-- Simple grid watcher -->
                        <env:observer name="Simple Grid Watcher" dataview="view_all" perspective="icons"/>
						
					</env:observers>
					
				</env:envspace>
			</extensions>

            <!-- Components -->
			<components>
			</components>

		</configuration>
	</configurations>

</applicationtype>
