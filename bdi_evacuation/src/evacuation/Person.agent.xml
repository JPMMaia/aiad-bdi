<?xml version="1.0" encoding="UTF-8"?>
<!--
  <H3>Garbage collector agent.</H3>

  Runs a predefined way on the grid and searches for
  exit_door. Whenever it sees exit_door at its actual position
  it tries to pick it up and brings it to one of the available
  exit_door burners (chosen randomly).
-->
<agent xmlns="http://jadex.sourceforge.net/jadex"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex
	                    http://jadex.sourceforge.net/jadex-bdi-2.2.xsd"
	name="Person"
	package="evacuation">

	<imports>
		<import>jadex.commons.future.*</import>
		<import>jadex.extension.envsupport.environment.space2d.*</import>
		<import>jadex.extension.envsupport.environment.*</import>
		<import>jadex.extension.envsupport.math.*</import>
		<import>jadex.bridge.IContextService</import>
	</imports>

	<beliefs>
		<!-- Environment. -->
		<belief name="env" class="Grid2D">
 			<fact class="IFuture">$scope.getParentAccess().getExtension("mygc2dspace")</fact>
 		</belief>
 		
 		<!-- Myself. -->
 		<belief name="myself" class="ISpaceObject">
 			<fact>$beliefbase.env.getAvatar($scope.getComponentDescription(), $scope.getAgentModel().getFullName())</fact>
 		</belief>

		<!-- The actual position on the grid world. -->
		<belief name="pos" class="IVector2" evaluationmode="push">
			<fact language="jcl">
				$beliefbase.myself.position
				// $beliefbase.myself.getProperty("position")
			</fact>
 		</belief>

		<!-- The exit_doors at the current position. -->
		<beliefset name="exit_doors" class="ISpaceObject"/>

		<!-- When at least one piece of waste is present on the
			current position the actual position is perceived as dirty. -->
		<belief name="is_dirty" class="boolean" evaluationmode="push">
			<fact language="jcl">
				$beliefbase.exit_doors.length>0
			</fact>
		</belief>
		
		<!-- Flag indicating if the agent currently carries exit_door. -->
		<belief name="has_exit_door" class="boolean" evaluationmode="push">
 			<fact language="jcl">
 				$beliefbase.myself.exit_door!=null
  				//$beliefbase.myself.getProperty("has_exit_door")
			</fact>
		</belief>
	</beliefs>

	<goals>

	    <!-- Goal for running around on the grid and
			searching for exit_door. -->
		<performgoal name="check" exclude="never"/>

		<!-- Goal for going to a specified position. -->
		<achievegoal name="go">
			<parameter name="pos" class="IVector2"/>
		</achievegoal>
	    
	    <achievegoal name="stop">
			<unique/>
			<creationcondition language="jcl">
				$beliefbase.is_dirty
			</creationcondition>
			<deliberation>
				<inhibits ref="check"/>
			</deliberation>
		</achievegoal>
	</goals>

	<plans>
	    <!-- Plan for running on a predefined route and searching waste. -->
		<plan name="checking_plan">
			<body class="CheckingPlanEnv"/>
			<trigger>
				<goal ref="check"/>
			</trigger>
		</plan>
		
		<!-- Plan for going to a target position. -->
		<plan name="go_plan">
			<parameter name="pos" class="IVector2">
 				<goalmapping ref="go.pos"/>
			</parameter>
			<body class="GoPlanEnv"/>
			<trigger>
				<goal ref="go"/>
			</trigger>
		</plan>
		
	    <!-- Plan to use when find exit. -->
		<plan name="stop_plan">
			<body class="StopPlanEnv"/>
			<trigger>
				<goal ref="stop"/>
			</trigger>
		</plan>
	</plans>

	<configurations>
		<configuration name="default">
			<goals>
				<!-- Initial goal for searching for exit_door. -->
				<initialgoal ref="check"/>			
			</goals>
		</configuration>
	</configurations>

</agent>